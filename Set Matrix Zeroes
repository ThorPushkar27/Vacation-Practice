Brute Force - TC = O(n3)

class Solution {
public:
    void makerow(int i,int m,vector<vector<int>>& matrix){
        for(int a =0; a<m; a++){
            if(matrix[i][a]!=0){
                matrix[i][a] = 1e6;
            }
        }

    }

    void makecol(int j,int n,vector<vector<int>>& matrix){
        for(int a =0; a<n; a++){
            if(matrix[a][j]!=0){
                matrix[a][j] = 1e6;
            }
        }

    }
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();

        for(int i =0; i<n; i++){
            for(int j =0; j<m; j++){
                if(matrix[i][j]== 0 ){
                    makerow(i,m,matrix);
                    makecol(j,n, matrix);
                    
                }
            }
        }
        for(int i =0; i<n; i++){
            for(int j =0; j<m; j++){
                if(matrix[i][j]== 1e6){
                    matrix[i][j] = 0;
                }
            }
        }
        
    }

    
};



Better - SC = O(N+M) APPROACH


class Solution {
public:
    
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();

        vector<int>row(n,0);
        vector<int>col(m,0);

        for(int i =0; i<n; i++){
            for(int j =0; j<m; j++){
                if(matrix[i][j]== 0 ){
                    row[i]=1;
                    col[j] =1;
                    
                }
            }
        }
        for(int i =0; i<n; i++){
            for(int j =0; j<m; j++){
                if(row[i]==1 || col[j]==1){
                    matrix[i][j] = 0;
                }
            }
        }
        
    }

    
};
